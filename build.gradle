buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

mainClassName = "com.example.gradle.GradleApplication"

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web-services')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}


task cleanImpl {
	sourceSets.main.java.each {file ->
		if (file.getName().endsWith("Impl.java")){
			delete file
		}
	}
}

task copyJar(type: Copy){
	from "${buildDir}/libs"
	include "*.jar"
	into "${buildDir}/yazid"
}

task testinou(type:Test){
	exclude "**/GradleApplication*"
}



compileJava {
	options.incremental = true
}


task launchInPort(type: org.gradle.api.tasks.Exec, dependsOn: build){

	def port = project.getProperty("porte")
	Properties props = new Properties()
	File propsFile = new File("${projectDir}/src/main/resources/application.properties")
	props.load(propsFile.newDataInputStream())
	props.setProperty('server.port', port)
	props.store(propsFile.newWriter(), null)

	workingDir "${buildDir}/libs"

	commandLine 'java', '-jar', 'gradle-0.0.1-SNAPSHOT.jar'

}
